/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/optimize/route";
exports.ids = ["app/api/optimize/route"];
exports.modules = {

/***/ "(rsc)/./app/api/optimize/route.js":
/*!***********************************!*\
  !*** ./app/api/optimize/route.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _src_lib_optimizer_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/lib/optimizer/index.js */ \"(rsc)/./src/lib/optimizer/index.js\");\n/* harmony import */ var _src_lib_optimizer_slitherProject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/lib/optimizer/slitherProject.js */ \"(rsc)/./src/lib/optimizer/slitherProject.js\");\n\n\n\n/**\n * Mock optimization scanner endpoint\n * In a real implementation, this would run static analysis tools\n * such as Slither, Sourcify metadata look-ups, or custom bytecode\n * heuristics to surface gas and security improvements specifically\n * for Arbitrum. For now we simply return hard-coded recommendations\n * so that the UI can demonstrate end-to-end functionality.\n */ async function POST(request) {\n    try {\n        const { code = '', slither = undefined, projectDir = undefined } = await request.json();\n        if (!code.trim()) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                ok: false,\n                error: 'No code provided'\n            }, {\n                status: 400\n            });\n        }\n        if (slither === true) process.env.SLITHER_ENABLED = '1';\n        if (slither === false) process.env.SLITHER_ENABLED = '0';\n        let suggestions = [];\n        if (projectDir) {\n            if (false) {}\n            suggestions = (0,_src_lib_optimizer_slitherProject_js__WEBPACK_IMPORTED_MODULE_2__.analyzeProjectWithSlither)(projectDir) || [];\n        } else {\n            suggestions = await (0,_src_lib_optimizer_index_js__WEBPACK_IMPORTED_MODULE_1__.analyzeOptimizations)(code);\n        }\n        // Compute metrics\n        const total = suggestions.length;\n        const high = suggestions.filter((s)=>s.priority === 'high').length;\n        const medium = suggestions.filter((s)=>s.priority === 'medium').length;\n        const low = suggestions.filter((s)=>s.priority === 'low').length;\n        const totalGasSavings = suggestions.reduce((sum, s)=>{\n            const num = parseInt(s.gas_savings?.match(/\\d+/)?.[0] || '0', 10);\n            return sum + num;\n        }, 0);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ok: true,\n            suggestions,\n            metrics: {\n                total,\n                high,\n                medium,\n                low,\n                totalGasSavings\n            }\n        });\n    } catch (err) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ok: false,\n            error: err.message || 'Failed to parse request'\n        }, {\n            status: 400\n        });\n    }\n}\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: true,\n        message: 'POST Solidity source { code: \"...\" } to receive mock optimization suggestions'\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL29wdGltaXplL3JvdXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ2dDO0FBQ2M7QUFFekY7Ozs7Ozs7Q0FPQyxHQUNNLGVBQWVHLEtBQUtDLE9BQU87SUFDaEMsSUFBSTtRQUNGLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEVBQUVDLFVBQVVDLFNBQVMsRUFBRUMsYUFBYUQsU0FBUyxFQUFFLEdBQUcsTUFBTUgsUUFBUUssSUFBSTtRQUVyRixJQUFJLENBQUNKLEtBQUtLLElBQUksSUFBSTtZQUNoQixPQUFPVixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUFFRSxJQUFJO2dCQUFPQyxPQUFPO1lBQW1CLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUNuRjtRQUVBLElBQUlQLFlBQVksTUFBTVEsUUFBUUMsR0FBRyxDQUFDQyxlQUFlLEdBQUc7UUFDcEQsSUFBSVYsWUFBWSxPQUFPUSxRQUFRQyxHQUFHLENBQUNDLGVBQWUsR0FBRztRQUVyRCxJQUFJQyxjQUFjLEVBQUU7UUFDcEIsSUFBSVQsWUFBWTtZQUNkLElBQUlNLEtBQXFDLEVBQUUsRUFFMUM7WUFDREcsY0FBY2YsK0ZBQXlCQSxDQUFDTSxlQUFlLEVBQUU7UUFDM0QsT0FBTztZQUNMUyxjQUFjLE1BQU1oQixpRkFBb0JBLENBQUNJO1FBQzNDO1FBRUEsa0JBQWtCO1FBQ2xCLE1BQU1hLFFBQVFELFlBQVlFLE1BQU07UUFDaEMsTUFBTUMsT0FBT0gsWUFBWUksTUFBTSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLFFBQVEsS0FBSyxRQUFRSixNQUFNO1FBQ3BFLE1BQU1LLFNBQVNQLFlBQVlJLE1BQU0sQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxRQUFRLEtBQUssVUFBVUosTUFBTTtRQUN4RSxNQUFNTSxNQUFNUixZQUFZSSxNQUFNLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUMsUUFBUSxLQUFLLE9BQU9KLE1BQU07UUFDbEUsTUFBTU8sa0JBQWtCVCxZQUFZVSxNQUFNLENBQUMsQ0FBQ0MsS0FBS047WUFDL0MsTUFBTU8sTUFBTUMsU0FBU1IsRUFBRVMsV0FBVyxFQUFFQyxNQUFNLFFBQVEsQ0FBQyxFQUFFLElBQUksS0FBSztZQUM5RCxPQUFPSixNQUFNQztRQUNmLEdBQUc7UUFFSCxPQUFPN0IscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2QkUsSUFBSTtZQUNKTTtZQUNBZ0IsU0FBUztnQkFDUGY7Z0JBQ0FFO2dCQUNBSTtnQkFDQUM7Z0JBQ0FDO1lBQ0Y7UUFDRjtJQUNGLEVBQUUsT0FBT1EsS0FBSztRQUNaLE9BQU9sQyxxREFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtZQUNFRSxJQUFJO1lBQ0pDLE9BQU9zQixJQUFJQyxPQUFPLElBQUk7UUFDeEIsR0FDQTtZQUFFdEIsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFTyxlQUFldUI7SUFDcEIsT0FBT3BDLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7UUFDdkJFLElBQUk7UUFDSndCLFNBQ0U7SUFDSjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL2Zsb3dwb3J0L2FwcC9hcGkvb3B0aW1pemUvcm91dGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgYW5hbHl6ZU9wdGltaXphdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9zcmMvbGliL29wdGltaXplci9pbmRleC5qcyc7XG5pbXBvcnQgeyBhbmFseXplUHJvamVjdFdpdGhTbGl0aGVyIH0gZnJvbSAnLi4vLi4vLi4vc3JjL2xpYi9vcHRpbWl6ZXIvc2xpdGhlclByb2plY3QuanMnO1xuXG4vKipcbiAqIE1vY2sgb3B0aW1pemF0aW9uIHNjYW5uZXIgZW5kcG9pbnRcbiAqIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCBydW4gc3RhdGljIGFuYWx5c2lzIHRvb2xzXG4gKiBzdWNoIGFzIFNsaXRoZXIsIFNvdXJjaWZ5IG1ldGFkYXRhIGxvb2stdXBzLCBvciBjdXN0b20gYnl0ZWNvZGVcbiAqIGhldXJpc3RpY3MgdG8gc3VyZmFjZSBnYXMgYW5kIHNlY3VyaXR5IGltcHJvdmVtZW50cyBzcGVjaWZpY2FsbHlcbiAqIGZvciBBcmJpdHJ1bS4gRm9yIG5vdyB3ZSBzaW1wbHkgcmV0dXJuIGhhcmQtY29kZWQgcmVjb21tZW5kYXRpb25zXG4gKiBzbyB0aGF0IHRoZSBVSSBjYW4gZGVtb25zdHJhdGUgZW5kLXRvLWVuZCBmdW5jdGlvbmFsaXR5LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBjb2RlID0gJycsIHNsaXRoZXIgPSB1bmRlZmluZWQsIHByb2plY3REaXIgPSB1bmRlZmluZWQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuXG4gICAgaWYgKCFjb2RlLnRyaW0oKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgb2s6IGZhbHNlLCBlcnJvcjogJ05vIGNvZGUgcHJvdmlkZWQnIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHNsaXRoZXIgPT09IHRydWUpIHByb2Nlc3MuZW52LlNMSVRIRVJfRU5BQkxFRCA9ICcxJztcbiAgICBpZiAoc2xpdGhlciA9PT0gZmFsc2UpIHByb2Nlc3MuZW52LlNMSVRIRVJfRU5BQkxFRCA9ICcwJztcblxuICAgIGxldCBzdWdnZXN0aW9ucyA9IFtdO1xuICAgIGlmIChwcm9qZWN0RGlyKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBvazogZmFsc2UsIGVycm9yOiAnUHJvamVjdCBkaXJlY3Rvcnkgc2NhbnMgYXJlIGRpc2FibGVkIGluIHByb2R1Y3Rpb24nIH0sIHsgc3RhdHVzOiA0MDMgfSk7XG4gICAgICB9XG4gICAgICBzdWdnZXN0aW9ucyA9IGFuYWx5emVQcm9qZWN0V2l0aFNsaXRoZXIocHJvamVjdERpcikgfHwgW107XG4gICAgfSBlbHNlIHtcbiAgICAgIHN1Z2dlc3Rpb25zID0gYXdhaXQgYW5hbHl6ZU9wdGltaXphdGlvbnMoY29kZSk7XG4gICAgfVxuXG4gICAgLy8gQ29tcHV0ZSBtZXRyaWNzXG4gICAgY29uc3QgdG90YWwgPSBzdWdnZXN0aW9ucy5sZW5ndGg7XG4gICAgY29uc3QgaGlnaCA9IHN1Z2dlc3Rpb25zLmZpbHRlcigocykgPT4gcy5wcmlvcml0eSA9PT0gJ2hpZ2gnKS5sZW5ndGg7XG4gICAgY29uc3QgbWVkaXVtID0gc3VnZ2VzdGlvbnMuZmlsdGVyKChzKSA9PiBzLnByaW9yaXR5ID09PSAnbWVkaXVtJykubGVuZ3RoO1xuICAgIGNvbnN0IGxvdyA9IHN1Z2dlc3Rpb25zLmZpbHRlcigocykgPT4gcy5wcmlvcml0eSA9PT0gJ2xvdycpLmxlbmd0aDtcbiAgICBjb25zdCB0b3RhbEdhc1NhdmluZ3MgPSBzdWdnZXN0aW9ucy5yZWR1Y2UoKHN1bSwgcykgPT4ge1xuICAgICAgY29uc3QgbnVtID0gcGFyc2VJbnQocy5nYXNfc2F2aW5ncz8ubWF0Y2goL1xcZCsvKT8uWzBdIHx8ICcwJywgMTApO1xuICAgICAgcmV0dXJuIHN1bSArIG51bTtcbiAgICB9LCAwKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBvazogdHJ1ZSxcbiAgICAgIHN1Z2dlc3Rpb25zLFxuICAgICAgbWV0cmljczoge1xuICAgICAgICB0b3RhbCxcbiAgICAgICAgaGlnaCxcbiAgICAgICAgbWVkaXVtLFxuICAgICAgICBsb3csXG4gICAgICAgIHRvdGFsR2FzU2F2aW5ncyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgb2s6IGZhbHNlLFxuICAgICAgICBlcnJvcjogZXJyLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBwYXJzZSByZXF1ZXN0JyxcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNDAwIH0sXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgIG9rOiB0cnVlLFxuICAgIG1lc3NhZ2U6XG4gICAgICAnUE9TVCBTb2xpZGl0eSBzb3VyY2UgeyBjb2RlOiBcIi4uLlwiIH0gdG8gcmVjZWl2ZSBtb2NrIG9wdGltaXphdGlvbiBzdWdnZXN0aW9ucycsXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImFuYWx5emVPcHRpbWl6YXRpb25zIiwiYW5hbHl6ZVByb2plY3RXaXRoU2xpdGhlciIsIlBPU1QiLCJyZXF1ZXN0IiwiY29kZSIsInNsaXRoZXIiLCJ1bmRlZmluZWQiLCJwcm9qZWN0RGlyIiwianNvbiIsInRyaW0iLCJvayIsImVycm9yIiwic3RhdHVzIiwicHJvY2VzcyIsImVudiIsIlNMSVRIRVJfRU5BQkxFRCIsInN1Z2dlc3Rpb25zIiwidG90YWwiLCJsZW5ndGgiLCJoaWdoIiwiZmlsdGVyIiwicyIsInByaW9yaXR5IiwibWVkaXVtIiwibG93IiwidG90YWxHYXNTYXZpbmdzIiwicmVkdWNlIiwic3VtIiwibnVtIiwicGFyc2VJbnQiLCJnYXNfc2F2aW5ncyIsIm1hdGNoIiwibWV0cmljcyIsImVyciIsIm1lc3NhZ2UiLCJHRVQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/optimize/route.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize%2Froute&page=%2Fapi%2Foptimize%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize%2Froute.js&appDir=%2FUsers%2Fmac%2Fflowport%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac%2Fflowport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize%2Froute&page=%2Fapi%2Foptimize%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize%2Froute.js&appDir=%2FUsers%2Fmac%2Fflowport%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac%2Fflowport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_mac_flowport_app_api_optimize_route_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/optimize/route.js */ \"(rsc)/./app/api/optimize/route.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/optimize/route\",\n        pathname: \"/api/optimize\",\n        filename: \"route\",\n        bundlePath: \"app/api/optimize/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/mac/flowport/app/api/optimize/route.js\",\n    nextConfigOutput,\n    userland: _Users_mac_flowport_app_api_optimize_route_js__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/optimize/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize%2Froute&page=%2Fapi%2Foptimize%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize%2Froute.js&appDir=%2FUsers%2Fmac%2Fflowport%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac%2Fflowport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/lib/optimizer/astAnalyzer.js":
/*!******************************************!*\
  !*** ./src/lib/optimizer/astAnalyzer.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeWithAst: () => (/* binding */ analyzeWithAst)\n/* harmony export */ });\n/* harmony import */ var solidity_parser_antlr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! solidity-parser-antlr */ \"(rsc)/./node_modules/solidity-parser-antlr/dist/index.js\");\n\nfunction analyzeWithAst(source) {\n    try {\n        const ast = solidity_parser_antlr__WEBPACK_IMPORTED_MODULE_0__.parse(source, {\n            tolerant: true,\n            range: true,\n            loc: true\n        });\n        const suggestions = [];\n        // Example 1: detect functions with memory array params that can be calldata\n        solidity_parser_antlr__WEBPACK_IMPORTED_MODULE_0__.visit(ast, {\n            FunctionDefinition (node) {\n                if (!node.parameters) return;\n                const params = Array.isArray(node.parameters.parameters) ? node.parameters.parameters : [];\n                // Treat any array parameter as candidate for calldata optimization; parsers differ in storage flags.\n                const arrayParams = params.filter((p)=>p?.typeName?.type === 'ArrayTypeName');\n                if (arrayParams.length > 0) {\n                    suggestions.push({\n                        type: 'calldata_optimization',\n                        priority: 'medium',\n                        title: 'Calldata Optimization (AST)',\n                        description: `${arrayParams.length} array parameter(s) could be calldata in ${node.name || '<anonymous>'}`,\n                        gas_savings: `${arrayParams.length * 3000} gas per call`,\n                        recommendation: 'Replace memory arrays with calldata for read-only functions',\n                        impact: 'Medium'\n                    });\n                }\n            }\n        });\n        // Example 2: detect multiple uint256 state vars that can pack\n        let uint256StateVars = 0;\n        solidity_parser_antlr__WEBPACK_IMPORTED_MODULE_0__.visit(ast, {\n            StateVariableDeclaration (node) {\n                for (const v of node.variables || []){\n                    const t = v.typeName?.name || v.typeName?.typeDescriptions?.typeString || '';\n                    if (/uint256\\b/.test(t)) uint256StateVars += 1;\n                }\n            }\n        });\n        if (uint256StateVars > 1) {\n            suggestions.push({\n                type: 'storage_packing',\n                priority: 'high',\n                title: 'Storage Packing Opportunity (AST)',\n                description: `Found ${uint256StateVars} uint256 state variables; consider packing`,\n                gas_savings: `${uint256StateVars * 20000} gas per transaction`,\n                recommendation: 'Use smaller types (uint128) or structs to pack slots',\n                impact: 'High'\n            });\n        }\n        // Fallback: regex-based detection of memory array params in function signatures\n        if (!suggestions.some((s)=>s.type === 'calldata_optimization')) {\n            const m = source.match(/function\\s+\\w+\\s*\\([^)]*\\[\\]\\s+memory[^)]*\\)/);\n            if (m) {\n                suggestions.push({\n                    type: 'calldata_optimization',\n                    priority: 'medium',\n                    title: 'Calldata Optimization (Heuristic)',\n                    description: 'Detected memory array parameter(s) in a function signature; prefer calldata for read-only functions',\n                    gas_savings: '3000 gas per call',\n                    recommendation: 'Replace memory arrays with calldata for read-only functions',\n                    impact: 'Medium'\n                });\n            }\n        }\n        return suggestions;\n    } catch  {\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL29wdGltaXplci9hc3RBbmFseXplci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUV6QyxTQUFTQyxlQUFlQyxNQUFNO0lBQ25DLElBQUk7UUFDRixNQUFNQyxNQUFNSCx3REFBWSxDQUFDRSxRQUFRO1lBQUVHLFVBQVU7WUFBTUMsT0FBTztZQUFNQyxLQUFLO1FBQUs7UUFDMUUsTUFBTUMsY0FBYyxFQUFFO1FBRXRCLDRFQUE0RTtRQUM1RVIsd0RBQVksQ0FBQ0csS0FBSztZQUNoQk8sb0JBQW1CQyxJQUFJO2dCQUNyQixJQUFJLENBQUNBLEtBQUtDLFVBQVUsRUFBRTtnQkFDdEIsTUFBTUMsU0FBU0MsTUFBTUMsT0FBTyxDQUFDSixLQUFLQyxVQUFVLENBQUNBLFVBQVUsSUFBSUQsS0FBS0MsVUFBVSxDQUFDQSxVQUFVLEdBQUcsRUFBRTtnQkFDMUYscUdBQXFHO2dCQUNyRyxNQUFNSSxjQUFjSCxPQUFPSSxNQUFNLENBQUMsQ0FBQ0MsSUFBTUEsR0FBR0MsVUFBVUMsU0FBUztnQkFDL0QsSUFBSUosWUFBWUssTUFBTSxHQUFHLEdBQUc7b0JBQzFCYixZQUFZYyxJQUFJLENBQUM7d0JBQ2ZGLE1BQU07d0JBQ05HLFVBQVU7d0JBQ1ZDLE9BQU87d0JBQ1BDLGFBQWEsR0FBR1QsWUFBWUssTUFBTSxDQUFDLHlDQUF5QyxFQUFFVixLQUFLZSxJQUFJLElBQUksZUFBZTt3QkFDMUdDLGFBQWEsR0FBR1gsWUFBWUssTUFBTSxHQUFHLEtBQUssYUFBYSxDQUFDO3dCQUN4RE8sZ0JBQWdCO3dCQUNoQkMsUUFBUTtvQkFDVjtnQkFDRjtZQUNGO1FBQ0Y7UUFFQSw4REFBOEQ7UUFDOUQsSUFBSUMsbUJBQW1CO1FBQ3ZCOUIsd0RBQVksQ0FBQ0csS0FBSztZQUNoQjRCLDBCQUF5QnBCLElBQUk7Z0JBQzNCLEtBQUssTUFBTXFCLEtBQUtyQixLQUFLc0IsU0FBUyxJQUFJLEVBQUUsQ0FBRTtvQkFDcEMsTUFBTUMsSUFBSUYsRUFBRWIsUUFBUSxFQUFFTyxRQUFRTSxFQUFFYixRQUFRLEVBQUVnQixrQkFBa0JDLGNBQWM7b0JBQzFFLElBQUksWUFBWUMsSUFBSSxDQUFDSCxJQUFJSixvQkFBb0I7Z0JBQy9DO1lBQ0Y7UUFDRjtRQUNBLElBQUlBLG1CQUFtQixHQUFHO1lBQ3hCdEIsWUFBWWMsSUFBSSxDQUFDO2dCQUNmRixNQUFNO2dCQUNORyxVQUFVO2dCQUNWQyxPQUFPO2dCQUNQQyxhQUFhLENBQUMsTUFBTSxFQUFFSyxpQkFBaUIsMENBQTBDLENBQUM7Z0JBQ2xGSCxhQUFhLEdBQUdHLG1CQUFtQixNQUFNLG9CQUFvQixDQUFDO2dCQUM5REYsZ0JBQWdCO2dCQUNoQkMsUUFBUTtZQUNWO1FBQ0Y7UUFFQSxnRkFBZ0Y7UUFDaEYsSUFBSSxDQUFDckIsWUFBWThCLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFbkIsSUFBSSxLQUFLLDBCQUEwQjtZQUNoRSxNQUFNb0IsSUFBSXRDLE9BQU91QyxLQUFLLENBQUM7WUFDdkIsSUFBSUQsR0FBRztnQkFDTGhDLFlBQVljLElBQUksQ0FBQztvQkFDZkYsTUFBTTtvQkFDTkcsVUFBVTtvQkFDVkMsT0FBTztvQkFDUEMsYUFBYTtvQkFDYkUsYUFBYTtvQkFDYkMsZ0JBQWdCO29CQUNoQkMsUUFBUTtnQkFDVjtZQUNGO1FBQ0Y7UUFFQSxPQUFPckI7SUFDVCxFQUFFLE9BQU07UUFDTixPQUFPLEVBQUU7SUFDWDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL2Zsb3dwb3J0L3NyYy9saWIvb3B0aW1pemVyL2FzdEFuYWx5emVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHBhcnNlciBmcm9tICdzb2xpZGl0eS1wYXJzZXItYW50bHInO1xuXG5leHBvcnQgZnVuY3Rpb24gYW5hbHl6ZVdpdGhBc3Qoc291cmNlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYXN0ID0gcGFyc2VyLnBhcnNlKHNvdXJjZSwgeyB0b2xlcmFudDogdHJ1ZSwgcmFuZ2U6IHRydWUsIGxvYzogdHJ1ZSB9KTtcbiAgICBjb25zdCBzdWdnZXN0aW9ucyA9IFtdO1xuXG4gICAgLy8gRXhhbXBsZSAxOiBkZXRlY3QgZnVuY3Rpb25zIHdpdGggbWVtb3J5IGFycmF5IHBhcmFtcyB0aGF0IGNhbiBiZSBjYWxsZGF0YVxuICAgIHBhcnNlci52aXNpdChhc3QsIHtcbiAgICAgIEZ1bmN0aW9uRGVmaW5pdGlvbihub2RlKSB7XG4gICAgICAgIGlmICghbm9kZS5wYXJhbWV0ZXJzKSByZXR1cm47XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IEFycmF5LmlzQXJyYXkobm9kZS5wYXJhbWV0ZXJzLnBhcmFtZXRlcnMpID8gbm9kZS5wYXJhbWV0ZXJzLnBhcmFtZXRlcnMgOiBbXTtcbiAgICAgICAgLy8gVHJlYXQgYW55IGFycmF5IHBhcmFtZXRlciBhcyBjYW5kaWRhdGUgZm9yIGNhbGxkYXRhIG9wdGltaXphdGlvbjsgcGFyc2VycyBkaWZmZXIgaW4gc3RvcmFnZSBmbGFncy5cbiAgICAgICAgY29uc3QgYXJyYXlQYXJhbXMgPSBwYXJhbXMuZmlsdGVyKChwKSA9PiBwPy50eXBlTmFtZT8udHlwZSA9PT0gJ0FycmF5VHlwZU5hbWUnKTtcbiAgICAgICAgaWYgKGFycmF5UGFyYW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdjYWxsZGF0YV9vcHRpbWl6YXRpb24nLFxuICAgICAgICAgICAgcHJpb3JpdHk6ICdtZWRpdW0nLFxuICAgICAgICAgICAgdGl0bGU6ICdDYWxsZGF0YSBPcHRpbWl6YXRpb24gKEFTVCknLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGAke2FycmF5UGFyYW1zLmxlbmd0aH0gYXJyYXkgcGFyYW1ldGVyKHMpIGNvdWxkIGJlIGNhbGxkYXRhIGluICR7bm9kZS5uYW1lIHx8ICc8YW5vbnltb3VzPid9YCxcbiAgICAgICAgICAgIGdhc19zYXZpbmdzOiBgJHthcnJheVBhcmFtcy5sZW5ndGggKiAzMDAwfSBnYXMgcGVyIGNhbGxgLFxuICAgICAgICAgICAgcmVjb21tZW5kYXRpb246ICdSZXBsYWNlIG1lbW9yeSBhcnJheXMgd2l0aCBjYWxsZGF0YSBmb3IgcmVhZC1vbmx5IGZ1bmN0aW9ucycsXG4gICAgICAgICAgICBpbXBhY3Q6ICdNZWRpdW0nLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gRXhhbXBsZSAyOiBkZXRlY3QgbXVsdGlwbGUgdWludDI1NiBzdGF0ZSB2YXJzIHRoYXQgY2FuIHBhY2tcbiAgICBsZXQgdWludDI1NlN0YXRlVmFycyA9IDA7XG4gICAgcGFyc2VyLnZpc2l0KGFzdCwge1xuICAgICAgU3RhdGVWYXJpYWJsZURlY2xhcmF0aW9uKG5vZGUpIHtcbiAgICAgICAgZm9yIChjb25zdCB2IG9mIG5vZGUudmFyaWFibGVzIHx8IFtdKSB7XG4gICAgICAgICAgY29uc3QgdCA9IHYudHlwZU5hbWU/Lm5hbWUgfHwgdi50eXBlTmFtZT8udHlwZURlc2NyaXB0aW9ucz8udHlwZVN0cmluZyB8fCAnJztcbiAgICAgICAgICBpZiAoL3VpbnQyNTZcXGIvLnRlc3QodCkpIHVpbnQyNTZTdGF0ZVZhcnMgKz0gMTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAodWludDI1NlN0YXRlVmFycyA+IDEpIHtcbiAgICAgIHN1Z2dlc3Rpb25zLnB1c2goe1xuICAgICAgICB0eXBlOiAnc3RvcmFnZV9wYWNraW5nJyxcbiAgICAgICAgcHJpb3JpdHk6ICdoaWdoJyxcbiAgICAgICAgdGl0bGU6ICdTdG9yYWdlIFBhY2tpbmcgT3Bwb3J0dW5pdHkgKEFTVCknLFxuICAgICAgICBkZXNjcmlwdGlvbjogYEZvdW5kICR7dWludDI1NlN0YXRlVmFyc30gdWludDI1NiBzdGF0ZSB2YXJpYWJsZXM7IGNvbnNpZGVyIHBhY2tpbmdgICxcbiAgICAgICAgZ2FzX3NhdmluZ3M6IGAke3VpbnQyNTZTdGF0ZVZhcnMgKiAyMDAwMH0gZ2FzIHBlciB0cmFuc2FjdGlvbmAsXG4gICAgICAgIHJlY29tbWVuZGF0aW9uOiAnVXNlIHNtYWxsZXIgdHlwZXMgKHVpbnQxMjgpIG9yIHN0cnVjdHMgdG8gcGFjayBzbG90cycsXG4gICAgICAgIGltcGFjdDogJ0hpZ2gnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gRmFsbGJhY2s6IHJlZ2V4LWJhc2VkIGRldGVjdGlvbiBvZiBtZW1vcnkgYXJyYXkgcGFyYW1zIGluIGZ1bmN0aW9uIHNpZ25hdHVyZXNcbiAgICBpZiAoIXN1Z2dlc3Rpb25zLnNvbWUoKHMpID0+IHMudHlwZSA9PT0gJ2NhbGxkYXRhX29wdGltaXphdGlvbicpKSB7XG4gICAgICBjb25zdCBtID0gc291cmNlLm1hdGNoKC9mdW5jdGlvblxccytcXHcrXFxzKlxcKFteKV0qXFxbXFxdXFxzK21lbW9yeVteKV0qXFwpLyk7XG4gICAgICBpZiAobSkge1xuICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnY2FsbGRhdGFfb3B0aW1pemF0aW9uJyxcbiAgICAgICAgICBwcmlvcml0eTogJ21lZGl1bScsXG4gICAgICAgICAgdGl0bGU6ICdDYWxsZGF0YSBPcHRpbWl6YXRpb24gKEhldXJpc3RpYyknLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnRGV0ZWN0ZWQgbWVtb3J5IGFycmF5IHBhcmFtZXRlcihzKSBpbiBhIGZ1bmN0aW9uIHNpZ25hdHVyZTsgcHJlZmVyIGNhbGxkYXRhIGZvciByZWFkLW9ubHkgZnVuY3Rpb25zJyxcbiAgICAgICAgICBnYXNfc2F2aW5nczogJzMwMDAgZ2FzIHBlciBjYWxsJyxcbiAgICAgICAgICByZWNvbW1lbmRhdGlvbjogJ1JlcGxhY2UgbWVtb3J5IGFycmF5cyB3aXRoIGNhbGxkYXRhIGZvciByZWFkLW9ubHkgZnVuY3Rpb25zJyxcbiAgICAgICAgICBpbXBhY3Q6ICdNZWRpdW0nLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3VnZ2VzdGlvbnM7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInBhcnNlciIsImFuYWx5emVXaXRoQXN0Iiwic291cmNlIiwiYXN0IiwicGFyc2UiLCJ0b2xlcmFudCIsInJhbmdlIiwibG9jIiwic3VnZ2VzdGlvbnMiLCJ2aXNpdCIsIkZ1bmN0aW9uRGVmaW5pdGlvbiIsIm5vZGUiLCJwYXJhbWV0ZXJzIiwicGFyYW1zIiwiQXJyYXkiLCJpc0FycmF5IiwiYXJyYXlQYXJhbXMiLCJmaWx0ZXIiLCJwIiwidHlwZU5hbWUiLCJ0eXBlIiwibGVuZ3RoIiwicHVzaCIsInByaW9yaXR5IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIm5hbWUiLCJnYXNfc2F2aW5ncyIsInJlY29tbWVuZGF0aW9uIiwiaW1wYWN0IiwidWludDI1NlN0YXRlVmFycyIsIlN0YXRlVmFyaWFibGVEZWNsYXJhdGlvbiIsInYiLCJ2YXJpYWJsZXMiLCJ0IiwidHlwZURlc2NyaXB0aW9ucyIsInR5cGVTdHJpbmciLCJ0ZXN0Iiwic29tZSIsInMiLCJtIiwibWF0Y2giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/optimizer/astAnalyzer.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/optimizer/cache.js":
/*!************************************!*\
  !*** ./src/lib/optimizer/cache.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeSourceHash: () => (/* binding */ computeSourceHash),\n/* harmony export */   readCacheByHash: () => (/* binding */ readCacheByHash),\n/* harmony export */   writeCacheByHash: () => (/* binding */ writeCacheByHash)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\n\nconst CACHE_DIR = path__WEBPACK_IMPORTED_MODULE_1__.join(process.cwd(), '.optimizer-cache');\nfunction ensureCacheDir() {\n    try {\n        if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(CACHE_DIR)) fs__WEBPACK_IMPORTED_MODULE_0__.mkdirSync(CACHE_DIR, {\n            recursive: true\n        });\n    } catch  {}\n}\nfunction computeSourceHash(source) {\n    return crypto__WEBPACK_IMPORTED_MODULE_2__.createHash('sha256').update(source).digest('hex');\n}\nfunction readCacheByHash(hash) {\n    try {\n        ensureCacheDir();\n        const file = path__WEBPACK_IMPORTED_MODULE_1__.join(CACHE_DIR, `${hash}.json`);\n        if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(file)) return null;\n        const raw = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(file, 'utf8');\n        return JSON.parse(raw);\n    } catch  {\n        return null;\n    }\n}\nfunction writeCacheByHash(hash, data) {\n    try {\n        ensureCacheDir();\n        const file = path__WEBPACK_IMPORTED_MODULE_1__.join(CACHE_DIR, `${hash}.json`);\n        fs__WEBPACK_IMPORTED_MODULE_0__.writeFileSync(file, JSON.stringify(data, null, 2));\n    } catch  {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL29wdGltaXplci9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0I7QUFDSTtBQUNJO0FBRTVCLE1BQU1HLFlBQVlGLHNDQUFTLENBQUNJLFFBQVFDLEdBQUcsSUFBSTtBQUUzQyxTQUFTQztJQUNQLElBQUk7UUFDRixJQUFJLENBQUNQLDBDQUFhLENBQUNHLFlBQVlILHlDQUFZLENBQUNHLFdBQVc7WUFBRU8sV0FBVztRQUFLO0lBQzNFLEVBQUUsT0FBTSxDQUFDO0FBQ1g7QUFFTyxTQUFTQyxrQkFBa0JDLE1BQU07SUFDdEMsT0FBT1YsOENBQWlCLENBQUMsVUFBVVksTUFBTSxDQUFDRixRQUFRRyxNQUFNLENBQUM7QUFDM0Q7QUFFTyxTQUFTQyxnQkFBZ0JDLElBQUk7SUFDbEMsSUFBSTtRQUNGVjtRQUNBLE1BQU1XLE9BQU9qQixzQ0FBUyxDQUFDRSxXQUFXLEdBQUdjLEtBQUssS0FBSyxDQUFDO1FBQ2hELElBQUksQ0FBQ2pCLDBDQUFhLENBQUNrQixPQUFPLE9BQU87UUFDakMsTUFBTUMsTUFBTW5CLDRDQUFlLENBQUNrQixNQUFNO1FBQ2xDLE9BQU9HLEtBQUtDLEtBQUssQ0FBQ0g7SUFDcEIsRUFBRSxPQUFNO1FBQ04sT0FBTztJQUNUO0FBQ0Y7QUFFTyxTQUFTSSxpQkFBaUJOLElBQUksRUFBRU8sSUFBSTtJQUN6QyxJQUFJO1FBQ0ZqQjtRQUNBLE1BQU1XLE9BQU9qQixzQ0FBUyxDQUFDRSxXQUFXLEdBQUdjLEtBQUssS0FBSyxDQUFDO1FBQ2hEakIsNkNBQWdCLENBQUNrQixNQUFNRyxLQUFLSyxTQUFTLENBQUNGLE1BQU0sTUFBTTtJQUNwRCxFQUFFLE9BQU0sQ0FBQztBQUNYIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL2Zsb3dwb3J0L3NyYy9saWIvb3B0aW1pemVyL2NhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcblxuY29uc3QgQ0FDSEVfRElSID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICcub3B0aW1pemVyLWNhY2hlJyk7XG5cbmZ1bmN0aW9uIGVuc3VyZUNhY2hlRGlyKCkge1xuICB0cnkge1xuICAgIGlmICghZnMuZXhpc3RzU3luYyhDQUNIRV9ESVIpKSBmcy5ta2RpclN5bmMoQ0FDSEVfRElSLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgfSBjYXRjaCB7fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZVNvdXJjZUhhc2goc291cmNlKSB7XG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKHNvdXJjZSkuZGlnZXN0KCdoZXgnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRDYWNoZUJ5SGFzaChoYXNoKSB7XG4gIHRyeSB7XG4gICAgZW5zdXJlQ2FjaGVEaXIoKTtcbiAgICBjb25zdCBmaWxlID0gcGF0aC5qb2luKENBQ0hFX0RJUiwgYCR7aGFzaH0uanNvbmApO1xuICAgIGlmICghZnMuZXhpc3RzU3luYyhmaWxlKSkgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgcmF3ID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsICd1dGY4Jyk7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UocmF3KTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlQ2FjaGVCeUhhc2goaGFzaCwgZGF0YSkge1xuICB0cnkge1xuICAgIGVuc3VyZUNhY2hlRGlyKCk7XG4gICAgY29uc3QgZmlsZSA9IHBhdGguam9pbihDQUNIRV9ESVIsIGAke2hhc2h9Lmpzb25gKTtcbiAgICBmcy53cml0ZUZpbGVTeW5jKGZpbGUsIEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpKTtcbiAgfSBjYXRjaCB7fVxufVxuIl0sIm5hbWVzIjpbImZzIiwicGF0aCIsImNyeXB0byIsIkNBQ0hFX0RJUiIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiZW5zdXJlQ2FjaGVEaXIiLCJleGlzdHNTeW5jIiwibWtkaXJTeW5jIiwicmVjdXJzaXZlIiwiY29tcHV0ZVNvdXJjZUhhc2giLCJzb3VyY2UiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwicmVhZENhY2hlQnlIYXNoIiwiaGFzaCIsImZpbGUiLCJyYXciLCJyZWFkRmlsZVN5bmMiLCJKU09OIiwicGFyc2UiLCJ3cml0ZUNhY2hlQnlIYXNoIiwiZGF0YSIsIndyaXRlRmlsZVN5bmMiLCJzdHJpbmdpZnkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/optimizer/cache.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/optimizer/index.js":
/*!************************************!*\
  !*** ./src/lib/optimizer/index.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeOptimizations: () => (/* binding */ analyzeOptimizations)\n/* harmony export */ });\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache.js */ \"(rsc)/./src/lib/optimizer/cache.js\");\n/* harmony import */ var _slither_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slither.js */ \"(rsc)/./src/lib/optimizer/slither.js\");\n/* harmony import */ var _astAnalyzer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./astAnalyzer.js */ \"(rsc)/./src/lib/optimizer/astAnalyzer.js\");\n// Note: keep this module dependency-light; avoid unused imports\n\n\n\n// Shared Optimizer Library\n// --------------------------------------------------\n// This module provides a set of static-analysis helpers that identify\n// storage-, calldata-, gas-, Arbitrum-specific and security-related\n// optimization opportunities in Solidity source code.\n// It is consumed by both the CLI (arb-migrate optimize) and the web\n// API route (POST /api/optimize).\nasync function analyzeOptimizations(contractCode, _options = {}) {\n    // Cache lookup\n    const hash = (0,_cache_js__WEBPACK_IMPORTED_MODULE_0__.computeSourceHash)(contractCode);\n    const cached = (0,_cache_js__WEBPACK_IMPORTED_MODULE_0__.readCacheByHash)(hash);\n    if (cached && Array.isArray(cached.suggestions)) {\n        return cached.suggestions;\n    }\n    const optimizations = [];\n    // Storage packing analysis (regex heuristics)\n    optimizations.push(...analyzeStoragePacking(contractCode).map((s)=>({\n            ...s,\n            source: 'heuristic'\n        })));\n    // Calldata optimization analysis\n    optimizations.push(...analyzeCalldataUsage(contractCode).map((s)=>({\n            ...s,\n            source: 'heuristic'\n        })));\n    // Gas optimization analysis\n    optimizations.push(...analyzeGasOptimizations(contractCode).map((s)=>({\n            ...s,\n            source: 'heuristic'\n        })));\n    // Arbitrum-specific optimizations\n    optimizations.push(...analyzeArbitrumSpecific(contractCode).map((s)=>({\n            ...s,\n            source: 'heuristic'\n        })));\n    // Security optimizations (informational)\n    optimizations.push(...analyzeSecurityOptimizations(contractCode).map((s)=>({\n            ...s,\n            source: 'heuristic'\n        })));\n    // AST-based analysis to improve accuracy\n    try {\n        const astSuggestions = (0,_astAnalyzer_js__WEBPACK_IMPORTED_MODULE_2__.analyzeWithAst)(contractCode);\n        if (Array.isArray(astSuggestions) && astSuggestions.length) {\n            optimizations.push(...astSuggestions.map((s)=>({\n                    ...s,\n                    source: s.source || 'ast'\n                })));\n        }\n    } catch  {}\n    // Optional: Slither findings merged in\n    try {\n        const slither = (0,_slither_js__WEBPACK_IMPORTED_MODULE_1__.runSlitherOnSource)(contractCode);\n        if (slither.used && Array.isArray(slither.suggestions)) {\n            optimizations.push(...slither.suggestions.map((s)=>({\n                    ...s,\n                    source: 'slither'\n                })));\n        }\n    } catch  {}\n    // Write cache\n    (0,_cache_js__WEBPACK_IMPORTED_MODULE_0__.writeCacheByHash)(hash, {\n        suggestions: optimizations,\n        createdAt: Date.now()\n    });\n    return optimizations;\n}\n// --------------------------------------------------\n// Individual analyzers\n// --------------------------------------------------\nfunction analyzeStoragePacking(contractCode) {\n    const optimizations = [];\n    const uint256Pattern = /uint256\\s+(\\w+)/g;\n    const matches = [\n        ...contractCode.matchAll(uint256Pattern)\n    ];\n    if (matches.length > 1) {\n        const variables = matches.map((m)=>m[1]);\n        optimizations.push({\n            type: 'storage_packing',\n            priority: 'high',\n            title: 'Storage Packing Opportunity',\n            description: `Found ${matches.length} uint256 variables that could be packed into fewer storage slots`,\n            gas_savings: `${matches.length * 20000} gas per transaction`,\n            recommendation: `Consider using uint128 or smaller types for: ${variables.join(', ')}`,\n            implementation: generateStoragePackingExample(variables),\n            impact: 'High'\n        });\n    }\n    return optimizations;\n}\nfunction analyzeCalldataUsage(contractCode) {\n    const optimizations = [];\n    const functionPattern = /function\\s+\\w+\\s*\\([^)]*memory[^)]*\\)/g;\n    const matches = [\n        ...contractCode.matchAll(functionPattern)\n    ];\n    if (matches.length > 0) {\n        optimizations.push({\n            type: 'calldata_optimization',\n            priority: 'medium',\n            title: 'Calldata Optimization',\n            description: `Found ${matches.length} functions using memory parameters that could use calldata`,\n            gas_savings: `${matches.length * 3000} gas per function call`,\n            recommendation: 'Replace memory parameters with calldata for read-only functions',\n            implementation: generateCalldataExample(),\n            impact: 'Medium'\n        });\n    }\n    return optimizations;\n}\nfunction analyzeGasOptimizations(contractCode) {\n    const optimizations = [];\n    const expensive = [\n        {\n            pattern: /\\.transfer\\(/g,\n            name: 'transfer() calls',\n            gas: 2300\n        },\n        {\n            pattern: /\\.call\\(/g,\n            name: 'call() operations',\n            gas: 2600\n        },\n        {\n            pattern: /for\\s*\\([^)]*\\)\\s*\\{/g,\n            name: 'loops',\n            gas: 1000\n        },\n        {\n            pattern: /mapping\\s*\\([^)]*\\)\\s*mapping/g,\n            name: 'nested mappings',\n            gas: 5000\n        }\n    ];\n    for (const { pattern, name, gas } of expensive){\n        const matches = contractCode.match(pattern);\n        if (matches) {\n            optimizations.push({\n                type: 'gas_optimization',\n                priority: 'medium',\n                title: `${name} Detected`,\n                description: `Found ${matches.length} instances of ${name.toLowerCase()}`,\n                gas_savings: `${matches.length * gas} gas per operation`,\n                recommendation: `Consider optimizing ${name.toLowerCase()} for better gas efficiency`,\n                implementation: generateGasOptimizationExample(name),\n                impact: 'Medium'\n            });\n        }\n    }\n    return optimizations;\n}\nfunction analyzeArbitrumSpecific(contractCode) {\n    const optimizations = [];\n    const patterns = [\n        {\n            pattern: /block\\.timestamp/g,\n            name: 'block.timestamp usage',\n            recommendation: \"Consider using Arbitrum's L2 block timestamp for better accuracy\",\n            gas_savings: '500 gas per call'\n        },\n        {\n            pattern: /msg\\.gas/g,\n            name: 'msg.gas usage',\n            recommendation: 'msg.gas behavior differs on Arbitrum ‑ consider alternatives',\n            gas_savings: '1000 gas per call'\n        }\n    ];\n    for (const { pattern, name, recommendation, gas_savings } of patterns){\n        const matches = contractCode.match(pattern);\n        if (matches) {\n            optimizations.push({\n                type: 'arbitrum_specific',\n                priority: 'high',\n                title: name,\n                description: `Found ${matches.length} instances of ${name.toLowerCase()}`,\n                gas_savings,\n                recommendation,\n                implementation: generateArbitrumExample(name),\n                impact: 'High'\n            });\n        }\n    }\n    return optimizations;\n}\nfunction analyzeSecurityOptimizations(contractCode) {\n    const optimizations = [];\n    const checks = [\n        {\n            pattern: /require\\s*\\([^)]*\\)/g,\n            name: 'require statements',\n            recommendation: 'Good security practice detected'\n        },\n        {\n            pattern: /modifier\\s+\\w+/g,\n            name: 'modifiers',\n            recommendation: 'Access control modifiers detected'\n        },\n        {\n            pattern: /reentrancyGuard/gi,\n            name: 'reentrancy protection',\n            recommendation: 'Reentrancy protection detected'\n        }\n    ];\n    for (const { pattern, name, recommendation } of checks){\n        const matches = contractCode.match(pattern);\n        if (matches) {\n            optimizations.push({\n                type: 'security_check',\n                priority: 'low',\n                title: `${name} Found`,\n                description: `Found ${matches.length} instances of ${name.toLowerCase()}`,\n                gas_savings: '0 gas (security feature)',\n                recommendation,\n                implementation: 'Security feature – no changes needed',\n                impact: 'Low'\n            });\n        }\n    }\n    return optimizations;\n}\n// --------------------------------------------------\n// Helper example generators\n// --------------------------------------------------\nfunction generateStoragePackingExample(vars) {\n    return `// Before:\\n${vars.map((v)=>`uint256 ${v};`).join('\\n')}\\n\\n// After:\\nstruct PackedData {\\n    uint128 ${vars[0]};\\n    uint128 ${vars[1] || 'unused'};\\n}\\nPackedData public packedData;`;\n}\nfunction generateCalldataExample() {\n    return `// Before:\\nfunction processData(string memory data) external {\\n    // ...\\n}\\n\\n// After:\\nfunction processData(string calldata data) external {\\n    // ...\\n}`;\n}\nfunction generateGasOptimizationExample(op) {\n    switch(op){\n        case 'transfer() calls':\n            return `// Before:\\nrecipient.transfer(amount);\\n\\n// After:\\n(bool success, ) = recipient.call{value: amount}(\"\");\\nrequire(success, \"Transfer failed\");`;\n        case 'loops':\n            return `// Before:\\nfor (uint i = 0; i < array.length; i++) {\\n    // expensive\\n}\\n\\n// After:\\nuint length = array.length;\\nfor (uint i = 0; i < length; i++) {\\n    // expensive\\n}`;\n        default:\n            return 'Review implementation for optimization opportunities.';\n    }\n}\nfunction generateArbitrumExample(op) {\n    switch(op){\n        case 'block.timestamp usage':\n            return `// Before:\\nuint256 timestamp = block.timestamp;\\n\\n// After:\\nuint256 timestamp = block.timestamp; // Arbitrum L2 timestamp`;\n        case 'msg.gas usage':\n            return `// Before:\\nuint256 gasLeft = msg.gas;\\n\\n// After:\\n// msg.gas behavior differs on Arbitrum – consider alternative estimation methods`;\n        default:\n            return 'Review Arbitrum documentation for best practices.';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/optimizer/index.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/optimizer/slither.js":
/*!**************************************!*\
  !*** ./src/lib/optimizer/slither.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runSlitherOnSource: () => (/* binding */ runSlitherOnSource),\n/* harmony export */   slitherEnabled: () => (/* binding */ slitherEnabled)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! child_process */ \"child_process\");\n\n\n\n\nfunction isSlitherAvailable() {\n    try {\n        const r = (0,child_process__WEBPACK_IMPORTED_MODULE_3__.spawnSync)('slither', [\n            '--version'\n        ], {\n            stdio: 'ignore'\n        });\n        return r.status === 0;\n    } catch  {\n        return false;\n    }\n}\nfunction slitherEnabled() {\n    if (process.env.SLITHER_ENABLED === '1') return true;\n    if (process.env.SLITHER_ENABLED === '0') return false;\n    // auto-detect\n    return isSlitherAvailable();\n}\nfunction runSlitherOnSource(source) {\n    if (!slitherEnabled()) return {\n        suggestions: [],\n        used: false\n    };\n    const tmpDir = fs__WEBPACK_IMPORTED_MODULE_0__.mkdtempSync(path__WEBPACK_IMPORTED_MODULE_2__.join(os__WEBPACK_IMPORTED_MODULE_1__.tmpdir(), 'optimizer-'));\n    const solFile = path__WEBPACK_IMPORTED_MODULE_2__.join(tmpDir, 'Contract.sol');\n    const outFile = path__WEBPACK_IMPORTED_MODULE_2__.join(tmpDir, 'slither.json');\n    try {\n        // Minimal wrapper around provided source\n        fs__WEBPACK_IMPORTED_MODULE_0__.writeFileSync(solFile, source.startsWith('// SPDX-License-Identifier:') || source.includes('pragma solidity') ? source : `// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n${source}`, 'utf8');\n        const args = [\n            solFile,\n            '--json',\n            outFile\n        ];\n        const r = (0,child_process__WEBPACK_IMPORTED_MODULE_3__.spawnSync)('slither', args, {\n            encoding: 'utf8'\n        });\n        if (r.status !== 0) {\n            return {\n                suggestions: [],\n                used: false\n            };\n        }\n        if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(outFile)) return {\n            suggestions: [],\n            used: false\n        };\n        const raw = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(outFile, 'utf8');\n        const report = JSON.parse(raw);\n        const suggestions = normalizeSlither(report);\n        return {\n            suggestions,\n            used: true\n        };\n    } catch  {\n        return {\n            suggestions: [],\n            used: false\n        };\n    } finally{\n        try {\n            fs__WEBPACK_IMPORTED_MODULE_0__.rmSync(tmpDir, {\n                recursive: true,\n                force: true\n            });\n        } catch  {}\n    }\n}\nfunction normalizeSlither(report) {\n    const findings = Array.isArray(report?.results?.detectors) ? report.results.detectors : [];\n    return findings.map((f)=>{\n        const title = f.check || f.short_description || 'Slither Finding';\n        const description = f.description || f.explanation || f.full_description || 'Issue detected by Slither';\n        const severity = (f.impact || f.impact_severity || 'Medium').toLowerCase();\n        const priority = severity === 'high' ? 'high' : severity === 'low' ? 'low' : 'medium';\n        return {\n            type: 'slither_' + (f.check || 'issue'),\n            priority,\n            title,\n            description,\n            gas_savings: '0 gas (security finding)',\n            recommendation: f.more_info || 'Review and remediate per Slither recommendation',\n            impact: severity.charAt(0).toUpperCase() + severity.slice(1)\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL29wdGltaXplci9zbGl0aGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQjtBQUNBO0FBQ0k7QUFDa0I7QUFFMUMsU0FBU0k7SUFDUCxJQUFJO1FBQ0YsTUFBTUMsSUFBSUYsd0RBQVNBLENBQUMsV0FBVztZQUFDO1NBQVksRUFBRTtZQUFFRyxPQUFPO1FBQVM7UUFDaEUsT0FBT0QsRUFBRUUsTUFBTSxLQUFLO0lBQ3RCLEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGO0FBRU8sU0FBU0M7SUFDZCxJQUFJQyxRQUFRQyxHQUFHLENBQUNDLGVBQWUsS0FBSyxLQUFLLE9BQU87SUFDaEQsSUFBSUYsUUFBUUMsR0FBRyxDQUFDQyxlQUFlLEtBQUssS0FBSyxPQUFPO0lBQ2hELGNBQWM7SUFDZCxPQUFPUDtBQUNUO0FBRU8sU0FBU1EsbUJBQW1CQyxNQUFNO0lBQ3ZDLElBQUksQ0FBQ0wsa0JBQWtCLE9BQU87UUFBRU0sYUFBYSxFQUFFO1FBQUVDLE1BQU07SUFBTTtJQUU3RCxNQUFNQyxTQUFTaEIsMkNBQWMsQ0FBQ0Usc0NBQVMsQ0FBQ0Qsc0NBQVMsSUFBSTtJQUNyRCxNQUFNbUIsVUFBVWxCLHNDQUFTLENBQUNjLFFBQVE7SUFDbEMsTUFBTUssVUFBVW5CLHNDQUFTLENBQUNjLFFBQVE7SUFDbEMsSUFBSTtRQUNGLHlDQUF5QztRQUN6Q2hCLDZDQUFnQixDQUNkb0IsU0FDQVAsT0FBT1UsVUFBVSxDQUFDLGtDQUFrQ1YsT0FBT1csUUFBUSxDQUFDLHFCQUNoRVgsU0FDQSxDQUFDLGlFQUFpRSxFQUFFQSxRQUFRLEVBQ2hGO1FBR0YsTUFBTVksT0FBTztZQUFDTDtZQUFTO1lBQVVDO1NBQVE7UUFDekMsTUFBTWhCLElBQUlGLHdEQUFTQSxDQUFDLFdBQVdzQixNQUFNO1lBQUVDLFVBQVU7UUFBTztRQUN4RCxJQUFJckIsRUFBRUUsTUFBTSxLQUFLLEdBQUc7WUFDbEIsT0FBTztnQkFBRU8sYUFBYSxFQUFFO2dCQUFFQyxNQUFNO1lBQU07UUFDeEM7UUFDQSxJQUFJLENBQUNmLDBDQUFhLENBQUNxQixVQUFVLE9BQU87WUFBRVAsYUFBYSxFQUFFO1lBQUVDLE1BQU07UUFBTTtRQUNuRSxNQUFNYSxNQUFNNUIsNENBQWUsQ0FBQ3FCLFNBQVM7UUFDckMsTUFBTVMsU0FBU0MsS0FBS0MsS0FBSyxDQUFDSjtRQUMxQixNQUFNZCxjQUFjbUIsaUJBQWlCSDtRQUNyQyxPQUFPO1lBQUVoQjtZQUFhQyxNQUFNO1FBQUs7SUFDbkMsRUFBRSxPQUFNO1FBQ04sT0FBTztZQUFFRCxhQUFhLEVBQUU7WUFBRUMsTUFBTTtRQUFNO0lBQ3hDLFNBQVU7UUFDUixJQUFJO1lBQUVmLHNDQUFTLENBQUNnQixRQUFRO2dCQUFFbUIsV0FBVztnQkFBTUMsT0FBTztZQUFLO1FBQUksRUFBRSxPQUFNLENBQUM7SUFDdEU7QUFDRjtBQUVBLFNBQVNILGlCQUFpQkgsTUFBTTtJQUM5QixNQUFNTyxXQUFXQyxNQUFNQyxPQUFPLENBQUNULFFBQVFVLFNBQVNDLGFBQWFYLE9BQU9VLE9BQU8sQ0FBQ0MsU0FBUyxHQUFHLEVBQUU7SUFDMUYsT0FBT0osU0FBU0ssR0FBRyxDQUFDLENBQUNDO1FBQ25CLE1BQU1DLFFBQVFELEVBQUVFLEtBQUssSUFBSUYsRUFBRUcsaUJBQWlCLElBQUk7UUFDaEQsTUFBTUMsY0FBY0osRUFBRUksV0FBVyxJQUFJSixFQUFFSyxXQUFXLElBQUlMLEVBQUVNLGdCQUFnQixJQUFJO1FBQzVFLE1BQU1DLFdBQVcsQ0FBQ1AsRUFBRVEsTUFBTSxJQUFJUixFQUFFUyxlQUFlLElBQUksUUFBTyxFQUFHQyxXQUFXO1FBQ3hFLE1BQU1DLFdBQVdKLGFBQWEsU0FBUyxTQUFTQSxhQUFhLFFBQVEsUUFBUTtRQUM3RSxPQUFPO1lBQ0xLLE1BQU0sYUFBY1osQ0FBQUEsRUFBRUUsS0FBSyxJQUFJLE9BQU07WUFDckNTO1lBQ0FWO1lBQ0FHO1lBQ0FTLGFBQWE7WUFDYkMsZ0JBQWdCZCxFQUFFZSxTQUFTLElBQUk7WUFDL0JQLFFBQVFELFNBQVNTLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtWLFNBQVNXLEtBQUssQ0FBQztRQUM1RDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvZmxvd3BvcnQvc3JjL2xpYi9vcHRpbWl6ZXIvc2xpdGhlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IG9zIGZyb20gJ29zJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgc3Bhd25TeW5jIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5cbmZ1bmN0aW9uIGlzU2xpdGhlckF2YWlsYWJsZSgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByID0gc3Bhd25TeW5jKCdzbGl0aGVyJywgWyctLXZlcnNpb24nXSwgeyBzdGRpbzogJ2lnbm9yZScgfSk7XG4gICAgcmV0dXJuIHIuc3RhdHVzID09PSAwO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNsaXRoZXJFbmFibGVkKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuU0xJVEhFUl9FTkFCTEVEID09PSAnMScpIHJldHVybiB0cnVlO1xuICBpZiAocHJvY2Vzcy5lbnYuU0xJVEhFUl9FTkFCTEVEID09PSAnMCcpIHJldHVybiBmYWxzZTtcbiAgLy8gYXV0by1kZXRlY3RcbiAgcmV0dXJuIGlzU2xpdGhlckF2YWlsYWJsZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVuU2xpdGhlck9uU291cmNlKHNvdXJjZSkge1xuICBpZiAoIXNsaXRoZXJFbmFibGVkKCkpIHJldHVybiB7IHN1Z2dlc3Rpb25zOiBbXSwgdXNlZDogZmFsc2UgfTtcblxuICBjb25zdCB0bXBEaXIgPSBmcy5ta2R0ZW1wU3luYyhwYXRoLmpvaW4ob3MudG1wZGlyKCksICdvcHRpbWl6ZXItJykpO1xuICBjb25zdCBzb2xGaWxlID0gcGF0aC5qb2luKHRtcERpciwgJ0NvbnRyYWN0LnNvbCcpO1xuICBjb25zdCBvdXRGaWxlID0gcGF0aC5qb2luKHRtcERpciwgJ3NsaXRoZXIuanNvbicpO1xuICB0cnkge1xuICAgIC8vIE1pbmltYWwgd3JhcHBlciBhcm91bmQgcHJvdmlkZWQgc291cmNlXG4gICAgZnMud3JpdGVGaWxlU3luYyhcbiAgICAgIHNvbEZpbGUsXG4gICAgICBzb3VyY2Uuc3RhcnRzV2l0aCgnLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6JykgfHwgc291cmNlLmluY2x1ZGVzKCdwcmFnbWEgc29saWRpdHknKVxuICAgICAgICA/IHNvdXJjZVxuICAgICAgICA6IGAvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogVU5MSUNFTlNFRFxcbnByYWdtYSBzb2xpZGl0eSBeMC44LjA7XFxuJHtzb3VyY2V9YCxcbiAgICAgICd1dGY4J1xuICAgICk7XG5cbiAgICBjb25zdCBhcmdzID0gW3NvbEZpbGUsICctLWpzb24nLCBvdXRGaWxlXTtcbiAgICBjb25zdCByID0gc3Bhd25TeW5jKCdzbGl0aGVyJywgYXJncywgeyBlbmNvZGluZzogJ3V0ZjgnIH0pO1xuICAgIGlmIChyLnN0YXR1cyAhPT0gMCkge1xuICAgICAgcmV0dXJuIHsgc3VnZ2VzdGlvbnM6IFtdLCB1c2VkOiBmYWxzZSB9O1xuICAgIH1cbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMob3V0RmlsZSkpIHJldHVybiB7IHN1Z2dlc3Rpb25zOiBbXSwgdXNlZDogZmFsc2UgfTtcbiAgICBjb25zdCByYXcgPSBmcy5yZWFkRmlsZVN5bmMob3V0RmlsZSwgJ3V0ZjgnKTtcbiAgICBjb25zdCByZXBvcnQgPSBKU09OLnBhcnNlKHJhdyk7XG4gICAgY29uc3Qgc3VnZ2VzdGlvbnMgPSBub3JtYWxpemVTbGl0aGVyKHJlcG9ydCk7XG4gICAgcmV0dXJuIHsgc3VnZ2VzdGlvbnMsIHVzZWQ6IHRydWUgfTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIHsgc3VnZ2VzdGlvbnM6IFtdLCB1c2VkOiBmYWxzZSB9O1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7IGZzLnJtU3luYyh0bXBEaXIsIHsgcmVjdXJzaXZlOiB0cnVlLCBmb3JjZTogdHJ1ZSB9KTsgfSBjYXRjaCB7fVxuICB9XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNsaXRoZXIocmVwb3J0KSB7XG4gIGNvbnN0IGZpbmRpbmdzID0gQXJyYXkuaXNBcnJheShyZXBvcnQ/LnJlc3VsdHM/LmRldGVjdG9ycykgPyByZXBvcnQucmVzdWx0cy5kZXRlY3RvcnMgOiBbXTtcbiAgcmV0dXJuIGZpbmRpbmdzLm1hcCgoZikgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gZi5jaGVjayB8fCBmLnNob3J0X2Rlc2NyaXB0aW9uIHx8ICdTbGl0aGVyIEZpbmRpbmcnO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZi5kZXNjcmlwdGlvbiB8fCBmLmV4cGxhbmF0aW9uIHx8IGYuZnVsbF9kZXNjcmlwdGlvbiB8fCAnSXNzdWUgZGV0ZWN0ZWQgYnkgU2xpdGhlcic7XG4gICAgY29uc3Qgc2V2ZXJpdHkgPSAoZi5pbXBhY3QgfHwgZi5pbXBhY3Rfc2V2ZXJpdHkgfHwgJ01lZGl1bScpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgcHJpb3JpdHkgPSBzZXZlcml0eSA9PT0gJ2hpZ2gnID8gJ2hpZ2gnIDogc2V2ZXJpdHkgPT09ICdsb3cnID8gJ2xvdycgOiAnbWVkaXVtJztcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ3NsaXRoZXJfJyArIChmLmNoZWNrIHx8ICdpc3N1ZScpLFxuICAgICAgcHJpb3JpdHksXG4gICAgICB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgZ2FzX3NhdmluZ3M6ICcwIGdhcyAoc2VjdXJpdHkgZmluZGluZyknLFxuICAgICAgcmVjb21tZW5kYXRpb246IGYubW9yZV9pbmZvIHx8ICdSZXZpZXcgYW5kIHJlbWVkaWF0ZSBwZXIgU2xpdGhlciByZWNvbW1lbmRhdGlvbicsXG4gICAgICBpbXBhY3Q6IHNldmVyaXR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc2V2ZXJpdHkuc2xpY2UoMSksXG4gICAgfTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsiZnMiLCJvcyIsInBhdGgiLCJzcGF3blN5bmMiLCJpc1NsaXRoZXJBdmFpbGFibGUiLCJyIiwic3RkaW8iLCJzdGF0dXMiLCJzbGl0aGVyRW5hYmxlZCIsInByb2Nlc3MiLCJlbnYiLCJTTElUSEVSX0VOQUJMRUQiLCJydW5TbGl0aGVyT25Tb3VyY2UiLCJzb3VyY2UiLCJzdWdnZXN0aW9ucyIsInVzZWQiLCJ0bXBEaXIiLCJta2R0ZW1wU3luYyIsImpvaW4iLCJ0bXBkaXIiLCJzb2xGaWxlIiwib3V0RmlsZSIsIndyaXRlRmlsZVN5bmMiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJhcmdzIiwiZW5jb2RpbmciLCJleGlzdHNTeW5jIiwicmF3IiwicmVhZEZpbGVTeW5jIiwicmVwb3J0IiwiSlNPTiIsInBhcnNlIiwibm9ybWFsaXplU2xpdGhlciIsInJtU3luYyIsInJlY3Vyc2l2ZSIsImZvcmNlIiwiZmluZGluZ3MiLCJBcnJheSIsImlzQXJyYXkiLCJyZXN1bHRzIiwiZGV0ZWN0b3JzIiwibWFwIiwiZiIsInRpdGxlIiwiY2hlY2siLCJzaG9ydF9kZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwiZXhwbGFuYXRpb24iLCJmdWxsX2Rlc2NyaXB0aW9uIiwic2V2ZXJpdHkiLCJpbXBhY3QiLCJpbXBhY3Rfc2V2ZXJpdHkiLCJ0b0xvd2VyQ2FzZSIsInByaW9yaXR5IiwidHlwZSIsImdhc19zYXZpbmdzIiwicmVjb21tZW5kYXRpb24iLCJtb3JlX2luZm8iLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/optimizer/slither.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/optimizer/slitherProject.js":
/*!*********************************************!*\
  !*** ./src/lib/optimizer/slitherProject.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeProjectWithSlither: () => (/* binding */ analyzeProjectWithSlither)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! child_process */ \"child_process\");\n\n\n\nfunction slitherAvailable() {\n    try {\n        const r = (0,child_process__WEBPACK_IMPORTED_MODULE_2__.spawnSync)('slither', [\n            '--version'\n        ], {\n            stdio: 'ignore'\n        });\n        return r.status === 0;\n    } catch  {\n        return false;\n    }\n}\nfunction analyzeProjectWithSlither(projectDir) {\n    if (!slitherAvailable()) return [];\n    const dir = path__WEBPACK_IMPORTED_MODULE_1__.resolve(projectDir);\n    if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(dir) || !fs__WEBPACK_IMPORTED_MODULE_0__.statSync(dir).isDirectory()) return [];\n    const outFile = path__WEBPACK_IMPORTED_MODULE_1__.join(dir, `.slither-report-${Date.now()}.json`);\n    try {\n        const args = [\n            dir,\n            '--json',\n            outFile\n        ];\n        const r = (0,child_process__WEBPACK_IMPORTED_MODULE_2__.spawnSync)('slither', args, {\n            encoding: 'utf8'\n        });\n        if (r.status !== 0) return [];\n        if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(outFile)) return [];\n        const raw = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(outFile, 'utf8');\n        const report = JSON.parse(raw);\n        return normalize(report);\n    } catch  {\n        return [];\n    } finally{\n        try {\n            fs__WEBPACK_IMPORTED_MODULE_0__.unlinkSync(outFile);\n        } catch  {}\n    }\n}\nfunction normalize(report) {\n    const detectors = Array.isArray(report?.results?.detectors) ? report.results.detectors : [];\n    return detectors.map((d)=>{\n        const severity = (d.impact || 'Medium').toLowerCase();\n        const priority = severity === 'high' ? 'high' : severity === 'low' ? 'low' : 'medium';\n        return {\n            type: 'slither_project_' + (d.check || 'issue'),\n            priority,\n            title: d.check || d.short_description || 'Slither Project Finding',\n            description: d.description || d.explanation || 'Project-level finding',\n            gas_savings: '0 gas (security finding)',\n            recommendation: d.more_info || 'Review per Slither recommendation',\n            impact: severity.charAt(0).toUpperCase() + severity.slice(1)\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL29wdGltaXplci9zbGl0aGVyUHJvamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9CO0FBQ0k7QUFDa0I7QUFFMUMsU0FBU0c7SUFDUCxJQUFJO1FBQ0YsTUFBTUMsSUFBSUYsd0RBQVNBLENBQUMsV0FBVztZQUFDO1NBQVksRUFBRTtZQUFFRyxPQUFPO1FBQVM7UUFDaEUsT0FBT0QsRUFBRUUsTUFBTSxLQUFLO0lBQ3RCLEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGO0FBRU8sU0FBU0MsMEJBQTBCQyxVQUFVO0lBQ2xELElBQUksQ0FBQ0wsb0JBQW9CLE9BQU8sRUFBRTtJQUNsQyxNQUFNTSxNQUFNUix5Q0FBWSxDQUFDTztJQUN6QixJQUFJLENBQUNSLDBDQUFhLENBQUNTLFFBQVEsQ0FBQ1Qsd0NBQVcsQ0FBQ1MsS0FBS0ksV0FBVyxJQUFJLE9BQU8sRUFBRTtJQUNyRSxNQUFNQyxVQUFVYixzQ0FBUyxDQUFDUSxLQUFLLENBQUMsZ0JBQWdCLEVBQUVPLEtBQUtDLEdBQUcsR0FBRyxLQUFLLENBQUM7SUFDbkUsSUFBSTtRQUNGLE1BQU1DLE9BQU87WUFBQ1Q7WUFBSztZQUFVSztTQUFRO1FBQ3JDLE1BQU1WLElBQUlGLHdEQUFTQSxDQUFDLFdBQVdnQixNQUFNO1lBQUVDLFVBQVU7UUFBTztRQUN4RCxJQUFJZixFQUFFRSxNQUFNLEtBQUssR0FBRyxPQUFPLEVBQUU7UUFDN0IsSUFBSSxDQUFDTiwwQ0FBYSxDQUFDYyxVQUFVLE9BQU8sRUFBRTtRQUN0QyxNQUFNTSxNQUFNcEIsNENBQWUsQ0FBQ2MsU0FBUztRQUNyQyxNQUFNUSxTQUFTQyxLQUFLQyxLQUFLLENBQUNKO1FBQzFCLE9BQU9LLFVBQVVIO0lBQ25CLEVBQUUsT0FBTTtRQUNOLE9BQU8sRUFBRTtJQUNYLFNBQVU7UUFDUixJQUFJO1lBQUV0QiwwQ0FBYSxDQUFDYztRQUFVLEVBQUUsT0FBTSxDQUFDO0lBQ3pDO0FBQ0Y7QUFFQSxTQUFTVyxVQUFVSCxNQUFNO0lBQ3ZCLE1BQU1LLFlBQVlDLE1BQU1DLE9BQU8sQ0FBQ1AsUUFBUVEsU0FBU0gsYUFBYUwsT0FBT1EsT0FBTyxDQUFDSCxTQUFTLEdBQUcsRUFBRTtJQUMzRixPQUFPQSxVQUFVSSxHQUFHLENBQUMsQ0FBQ0M7UUFDcEIsTUFBTUMsV0FBVyxDQUFDRCxFQUFFRSxNQUFNLElBQUksUUFBTyxFQUFHQyxXQUFXO1FBQ25ELE1BQU1DLFdBQVdILGFBQWEsU0FBUyxTQUFTQSxhQUFhLFFBQVEsUUFBUTtRQUM3RSxPQUFPO1lBQ0xJLE1BQU0scUJBQXNCTCxDQUFBQSxFQUFFTSxLQUFLLElBQUksT0FBTTtZQUM3Q0Y7WUFDQUcsT0FBT1AsRUFBRU0sS0FBSyxJQUFJTixFQUFFUSxpQkFBaUIsSUFBSTtZQUN6Q0MsYUFBYVQsRUFBRVMsV0FBVyxJQUFJVCxFQUFFVSxXQUFXLElBQUk7WUFDL0NDLGFBQWE7WUFDYkMsZ0JBQWdCWixFQUFFYSxTQUFTLElBQUk7WUFDL0JYLFFBQVFELFNBQVNhLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtkLFNBQVNlLEtBQUssQ0FBQztRQUM1RDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvZmxvd3BvcnQvc3JjL2xpYi9vcHRpbWl6ZXIvc2xpdGhlclByb2plY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgc3Bhd25TeW5jIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5cbmZ1bmN0aW9uIHNsaXRoZXJBdmFpbGFibGUoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgciA9IHNwYXduU3luYygnc2xpdGhlcicsIFsnLS12ZXJzaW9uJ10sIHsgc3RkaW86ICdpZ25vcmUnIH0pO1xuICAgIHJldHVybiByLnN0YXR1cyA9PT0gMDtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhbmFseXplUHJvamVjdFdpdGhTbGl0aGVyKHByb2plY3REaXIpIHtcbiAgaWYgKCFzbGl0aGVyQXZhaWxhYmxlKCkpIHJldHVybiBbXTtcbiAgY29uc3QgZGlyID0gcGF0aC5yZXNvbHZlKHByb2plY3REaXIpO1xuICBpZiAoIWZzLmV4aXN0c1N5bmMoZGlyKSB8fCAhZnMuc3RhdFN5bmMoZGlyKS5pc0RpcmVjdG9yeSgpKSByZXR1cm4gW107XG4gIGNvbnN0IG91dEZpbGUgPSBwYXRoLmpvaW4oZGlyLCBgLnNsaXRoZXItcmVwb3J0LSR7RGF0ZS5ub3coKX0uanNvbmApO1xuICB0cnkge1xuICAgIGNvbnN0IGFyZ3MgPSBbZGlyLCAnLS1qc29uJywgb3V0RmlsZV07XG4gICAgY29uc3QgciA9IHNwYXduU3luYygnc2xpdGhlcicsIGFyZ3MsIHsgZW5jb2Rpbmc6ICd1dGY4JyB9KTtcbiAgICBpZiAoci5zdGF0dXMgIT09IDApIHJldHVybiBbXTtcbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMob3V0RmlsZSkpIHJldHVybiBbXTtcbiAgICBjb25zdCByYXcgPSBmcy5yZWFkRmlsZVN5bmMob3V0RmlsZSwgJ3V0ZjgnKTtcbiAgICBjb25zdCByZXBvcnQgPSBKU09OLnBhcnNlKHJhdyk7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZShyZXBvcnQpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gW107XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHsgZnMudW5saW5rU3luYyhvdXRGaWxlKTsgfSBjYXRjaCB7fVxuICB9XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZShyZXBvcnQpIHtcbiAgY29uc3QgZGV0ZWN0b3JzID0gQXJyYXkuaXNBcnJheShyZXBvcnQ/LnJlc3VsdHM/LmRldGVjdG9ycykgPyByZXBvcnQucmVzdWx0cy5kZXRlY3RvcnMgOiBbXTtcbiAgcmV0dXJuIGRldGVjdG9ycy5tYXAoKGQpID0+IHtcbiAgICBjb25zdCBzZXZlcml0eSA9IChkLmltcGFjdCB8fCAnTWVkaXVtJykudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBwcmlvcml0eSA9IHNldmVyaXR5ID09PSAnaGlnaCcgPyAnaGlnaCcgOiBzZXZlcml0eSA9PT0gJ2xvdycgPyAnbG93JyA6ICdtZWRpdW0nO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnc2xpdGhlcl9wcm9qZWN0XycgKyAoZC5jaGVjayB8fCAnaXNzdWUnKSxcbiAgICAgIHByaW9yaXR5LFxuICAgICAgdGl0bGU6IGQuY2hlY2sgfHwgZC5zaG9ydF9kZXNjcmlwdGlvbiB8fCAnU2xpdGhlciBQcm9qZWN0IEZpbmRpbmcnLFxuICAgICAgZGVzY3JpcHRpb246IGQuZGVzY3JpcHRpb24gfHwgZC5leHBsYW5hdGlvbiB8fCAnUHJvamVjdC1sZXZlbCBmaW5kaW5nJyxcbiAgICAgIGdhc19zYXZpbmdzOiAnMCBnYXMgKHNlY3VyaXR5IGZpbmRpbmcpJyxcbiAgICAgIHJlY29tbWVuZGF0aW9uOiBkLm1vcmVfaW5mbyB8fCAnUmV2aWV3IHBlciBTbGl0aGVyIHJlY29tbWVuZGF0aW9uJyxcbiAgICAgIGltcGFjdDogc2V2ZXJpdHkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzZXZlcml0eS5zbGljZSgxKSxcbiAgICB9O1xuICB9KTtcbn1cblxuXG4iXSwibmFtZXMiOlsiZnMiLCJwYXRoIiwic3Bhd25TeW5jIiwic2xpdGhlckF2YWlsYWJsZSIsInIiLCJzdGRpbyIsInN0YXR1cyIsImFuYWx5emVQcm9qZWN0V2l0aFNsaXRoZXIiLCJwcm9qZWN0RGlyIiwiZGlyIiwicmVzb2x2ZSIsImV4aXN0c1N5bmMiLCJzdGF0U3luYyIsImlzRGlyZWN0b3J5Iiwib3V0RmlsZSIsImpvaW4iLCJEYXRlIiwibm93IiwiYXJncyIsImVuY29kaW5nIiwicmF3IiwicmVhZEZpbGVTeW5jIiwicmVwb3J0IiwiSlNPTiIsInBhcnNlIiwibm9ybWFsaXplIiwidW5saW5rU3luYyIsImRldGVjdG9ycyIsIkFycmF5IiwiaXNBcnJheSIsInJlc3VsdHMiLCJtYXAiLCJkIiwic2V2ZXJpdHkiLCJpbXBhY3QiLCJ0b0xvd2VyQ2FzZSIsInByaW9yaXR5IiwidHlwZSIsImNoZWNrIiwidGl0bGUiLCJzaG9ydF9kZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwiZXhwbGFuYXRpb24iLCJnYXNfc2F2aW5ncyIsInJlY29tbWVuZGF0aW9uIiwibW9yZV9pbmZvIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/optimizer/slitherProject.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/solidity-parser-antlr"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Foptimize%2Froute&page=%2Fapi%2Foptimize%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foptimize%2Froute.js&appDir=%2FUsers%2Fmac%2Fflowport%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac%2Fflowport&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();